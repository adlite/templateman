// Action names
export const FETCH = '@${TM:MODULE_NAME}/FETCH';
export const FETCH_OK = '@${TM:MODULE_NAME}/FETCH_OK';
export const FETCH_ERR = '@${TM:MODULE_NAME}/FETCH_ERR';

// Action creators
const fetchStart = () => {
  return {type: FETCH};
};

const fetchOk = data => ({
  type: FETCH_OK,
  payload: data,
});

const fetchErr = err => ({
  type: FETCH_ERR,
  error: err,
});

export const fetchData = () => async dispatch => {
  dispatch(fetchStart());

  try {
    const response = await fetch('https://jsonplaceholder.typicode.com/todos/');
    const responseData = await response.json();
    dispatch(fetchOk(responseData));
  } catch(err) {
    dispatch(fetchErr(err.message));
  }
};

// Reducer
const initialState = {
  data: [],
  isFetching: false,
  error: null,
};

export default function reducer(state = initialState, action) {
  switch (action.type) {
    case FETCH:
      return {
        ...state,
        isFetching: true,
      };
    case FETCH_OK:
      return {
        ...state,
        isFetching: false,
        data: action.payload,
      };
    case FETCH_ERR:
      return {
        ...state,
        isFetching: false,
        error: action.error,
      };
    default:
      return state;
  }
}
